{"version":3,"sources":["../src/svg-renderer.js"],"names":[],"mappings":"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","file":"svg-renderer.js","sourcesContent":["import utils from \"./utils\";\nimport Renderer from \"./renderer\";\n\nconst SVGRenderer = function(boardElement, { hooks, options }) {\n  Renderer.call(this, boardElement, { hooks: hooks, options: options });\n  utils.addClass(boardElement, \"tenuki-svg-renderer\");\n};\n\nSVGRenderer.prototype = Object.create(Renderer.prototype);\nSVGRenderer.prototype.constructor = SVGRenderer;\n\nSVGRenderer.prototype.generateBoard = function(boardState) {\n  const renderer = this;\n  const zoomContainer = renderer.zoomContainer;\n\n  const svg = utils.createSVGElement(\"svg\");\n  renderer.svgElement = svg;\n\n  const defs = utils.createSVGElement(\"defs\");\n  utils.appendElement(svg, defs);\n\n  renderer.blackGradientID = utils.randomID(\"black-gradient\");\n  renderer.whiteGradientID = utils.randomID(\"white-gradient\");\n\n  const blackGradient = utils.createSVGElement(\"radialGradient\", {\n    attributes: {\n      id: renderer.blackGradientID,\n      cy: \"0\",\n      r: \"55%\"\n    }\n  });\n  utils.appendElement(blackGradient, utils.createSVGElement(\"stop\", {\n    attributes: {\n      offset: \"0%\",\n      \"stop-color\": \"#848484\"\n    }\n  }));\n  utils.appendElement(blackGradient, utils.createSVGElement(\"stop\", {\n    attributes: {\n      offset: \"100%\",\n      \"stop-color\": \"hsl(0, 0%, 20%)\"\n    }\n  }));\n  utils.appendElement(defs, blackGradient);\n\n  const whiteGradient = utils.createSVGElement(\"radialGradient\", {\n    attributes: {\n      id: renderer.whiteGradientID,\n      cy: \"0\",\n      r: \"70%\"\n    }\n  });\n  utils.appendElement(whiteGradient, utils.createSVGElement(\"stop\", {\n    attributes: {\n      offset: \"0%\",\n      \"stop-color\": \"white\"\n    }\n  }));\n  utils.appendElement(whiteGradient, utils.createSVGElement(\"stop\", {\n    attributes: {\n      offset: \"100%\",\n      \"stop-color\": \"#DDDDDD\"\n    }\n  }));\n  utils.appendElement(defs, whiteGradient);\n\n  const contentsContainer = utils.createSVGElement(\"g\", {\n    attributes: {\n      class: \"contents\",\n      transform: `translate(${this.MARGIN}, ${this.MARGIN})`\n    }\n  });\n\n  const lines = utils.createSVGElement(\"g\", {\n    attributes: {\n      class: \"lines\"\n    }\n  });\n  utils.appendElement(contentsContainer, lines);\n\n  for (let y = 0; y < boardState.boardSize - 1; y++) {\n    for (let x = 0; x < boardState.boardSize - 1; x++) {\n      const lineBox = utils.createSVGElement(\"rect\", {\n        attributes: {\n          y: y * (this.INTERSECTION_GAP_SIZE + 1) - 0.5,\n          x: x * (this.INTERSECTION_GAP_SIZE + 1) - 0.5,\n          width: this.INTERSECTION_GAP_SIZE + 1,\n          height: this.INTERSECTION_GAP_SIZE + 1,\n          class: \"line-box\"\n        }\n      });\n\n      utils.appendElement(lines, lineBox);\n    }\n  }\n\n  const hoshiPoints = utils.createSVGElement(\"g\", { attributes: { class: \"hoshi\" }});\n  utils.appendElement(contentsContainer, hoshiPoints);\n\n  Renderer.hoshiPositionsFor(boardState.boardSize).forEach(h => {\n    const hoshi = utils.createSVGElement(\"circle\", {\n      attributes: {\n        class: \"hoshi\",\n        cy: h.top * (this.INTERSECTION_GAP_SIZE + 1) - 0.5,\n        cx: h.left * (this.INTERSECTION_GAP_SIZE + 1) - 0.5,\n        r: 2\n      }\n    });\n\n    utils.appendElement(hoshiPoints, hoshi);\n  });\n\n  const intersections = utils.createSVGElement(\"g\", { attributes: { class: \"intersections\" }});\n  utils.appendElement(contentsContainer, intersections);\n\n  if (this.hasCoordinates) {\n    const coordinateContainer = utils.createSVGElement(\"g\", {\n      attributes: {\n        class: \"coordinates\",\n        transform: `translate(${this.MARGIN}, ${this.MARGIN})`\n      }\n    });\n\n    for (let y = 0; y < boardState.boardSize; y++) {\n      if (this.hasCoordinates) {\n        // TODO: 16 is for the rendered height _on my browser_. not reliable...\n\n        [16/2 + 1 - (16 + 16/2 + 16/(2*2) + 16/(2*2*2)), 16/2 + 1 + (16 + 16/2) + (boardState.boardSize - 1)*(this.INTERSECTION_GAP_SIZE + 1)].forEach(verticalOffset => {\n          utils.appendElement(coordinateContainer, utils.createSVGElement(\"text\", {\n            text: boardState.xCoordinateFor(y),\n            attributes: {\n              \"text-anchor\": \"middle\",\n              y: verticalOffset - 0.5,\n              x: y * (this.INTERSECTION_GAP_SIZE + 1) - 0.5\n            }\n          }));\n        });\n\n\n        [-1*(16 + 16/2 + 16/(2*2)), (16 + 16/2 + 16/(2*2)) + (boardState.boardSize - 1)*(this.INTERSECTION_GAP_SIZE + 1)].forEach(horizontalOffset => {\n          utils.appendElement(coordinateContainer, utils.createSVGElement(\"text\", {\n            text: boardState.yCoordinateFor(y),\n            attributes: {\n              \"text-anchor\": \"middle\",\n              y: y * (this.INTERSECTION_GAP_SIZE + 1) - 0.5 + 16/(2*2),\n              x: horizontalOffset - 0.5\n            }\n          }));\n        });\n\n        utils.appendElement(svg, coordinateContainer);\n      }\n    }\n  }\n\n  for (let y = 0; y < boardState.boardSize; y++) {\n    for (let x = 0; x < boardState.boardSize; x++) {\n      const intersectionGroup = utils.createSVGElement(\"g\", {\n        attributes: {\n          class: \"intersection\"\n        }\n      });\n      utils.appendElement(intersections, intersectionGroup);\n\n      const intersectionInnerContainer = utils.createSVGElement(\"g\", {\n        attributes: {\n          class: \"intersection-inner-container\"\n        }\n      });\n      utils.appendElement(intersectionGroup, intersectionInnerContainer);\n\n      const intersectionBox = utils.createSVGElement(\"rect\", {\n        attributes: {\n          y: y * (this.INTERSECTION_GAP_SIZE + 1) - this.INTERSECTION_GAP_SIZE/2 - 0.5,\n          x: x * (this.INTERSECTION_GAP_SIZE + 1) - this.INTERSECTION_GAP_SIZE/2 - 0.5,\n          width: this.INTERSECTION_GAP_SIZE,\n          height: this.INTERSECTION_GAP_SIZE\n        }\n      });\n      utils.appendElement(intersectionInnerContainer, intersectionBox);\n\n      let stoneRadius = this.INTERSECTION_GAP_SIZE / 2;\n\n      if (this.smallerStones) {\n        stoneRadius -= 1;\n      }\n\n      const stoneAttributes = {\n        class: \"stone\",\n        cy: y * (this.INTERSECTION_GAP_SIZE + 1) - 0.5,\n        cx: x * (this.INTERSECTION_GAP_SIZE + 1) - 0.5,\n        width: this.INTERSECTION_GAP_SIZE + 1,\n        height: this.INTERSECTION_GAP_SIZE + 1,\n        r: stoneRadius\n      };\n\n      if (this.texturedStones) {\n        utils.appendElement(intersectionInnerContainer, utils.createSVGElement(\"circle\", {\n          attributes: {\n            class: \"stone-shadow\",\n            cy: stoneAttributes[\"cy\"] + 2,\n            cx: stoneAttributes[\"cx\"],\n            width: stoneAttributes[\"width\"],\n            height: stoneAttributes[\"height\"],\n            r: stoneRadius\n          }\n        }));\n      }\n\n      const intersection = utils.createSVGElement(\"circle\", {\n        attributes: stoneAttributes\n      });\n      utils.appendElement(intersectionInnerContainer, intersection);\n\n      utils.appendElement(intersectionInnerContainer, utils.createSVGElement(\"circle\", {\n        attributes: {\n          class: \"marker\",\n          cy: y * (this.INTERSECTION_GAP_SIZE + 1) - 0.5,\n          cx: x * (this.INTERSECTION_GAP_SIZE + 1) - 0.5,\n          width: this.INTERSECTION_GAP_SIZE + 1,\n          height: this.INTERSECTION_GAP_SIZE + 1,\n          r: 4.5\n        }\n      }));\n\n      utils.appendElement(intersectionInnerContainer, utils.createSVGElement(\"rect\", {\n        attributes: {\n          class: \"ko-marker\",\n          y: y * (this.INTERSECTION_GAP_SIZE + 1) - 6 - 0.5,\n          x: x * (this.INTERSECTION_GAP_SIZE + 1) - 6 - 0.5,\n          width: 12,\n          height: 12\n        }\n      }));\n\n      utils.appendElement(intersectionInnerContainer, utils.createSVGElement(\"rect\", {\n        attributes: {\n          class: \"territory-marker\",\n          y: y * (this.INTERSECTION_GAP_SIZE + 1) - 6,\n          x: x * (this.INTERSECTION_GAP_SIZE + 1) - 6,\n          width: 11,\n          height: 11\n        }\n      }));\n\n      this.grid[y] = this.grid[y] || [];\n      this.grid[y][x] = intersectionGroup;\n\n      this.addIntersectionEventListeners(intersectionGroup, y, x);\n    }\n  }\n\n  utils.appendElement(svg, contentsContainer);\n  utils.appendElement(zoomContainer, svg);\n\n  renderer.svgElement.setAttribute(\"height\", renderer.BOARD_LENGTH);\n  renderer.svgElement.setAttribute(\"width\", renderer.BOARD_LENGTH);\n};\n\nSVGRenderer.prototype.computeSizing = function() {\n  Renderer.prototype.computeSizing.call(this);\n\n  // In addition to the will-change re-raster in Renderer,\n  // the SVG element appears to sometimes need this to\n  // prevent blurriness on resize.\n  this.svgElement.style.transform = \"none\";\n\n  window.requestAnimationFrame(() => {\n    this.svgElement.style.transform = \"\";\n  });\n};\n\nSVGRenderer.prototype.setIntersectionClasses = function(intersectionEl, intersection, classes) {\n  if (intersectionEl.getAttribute(\"class\") !== classes.join(\" \")) {\n    intersectionEl.setAttribute(\"class\", classes.join(\" \"));\n  }\n\n  if (this.texturedStones) {\n    if (intersection.isEmpty()) {\n      intersectionEl.querySelector(\".stone\").setAttribute(\"style\", \"\");\n    } else {\n      intersectionEl.querySelector(\".stone\").setAttribute(\"style\", \"fill: url(#\" + this[intersection.value + \"GradientID\"] + \")\");\n    }\n  }\n};\n\nexport default SVGRenderer;\n"]}