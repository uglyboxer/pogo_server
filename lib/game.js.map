{"version":3,"sources":["../src/game.js"],"names":[],"mappings":"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","file":"game.js","sourcesContent":["import DOMRenderer from \"./dom-renderer\";\nimport SVGRenderer from \"./svg-renderer\";\nimport NullRenderer from \"./null-renderer\";\nimport BoardState from \"./board-state\";\nimport Ruleset from \"./ruleset\";\nimport Scorer from \"./scorer\";\n\nconst VALID_GAME_OPTIONS = [\n  \"boardSize\",\n  \"scoring\",\n  \"handicapStones\",\n  \"koRule\",\n  \"komi\",\n  \"_hooks\",\n  \"fuzzyStonePlacement\",\n  \"renderer\",\n  \"freeHandicapPlacement\"\n];\n\nconst Game = function(boardElement) {\n  this._defaultBoardSize = 19;\n  this.boardSize = null;\n  this._moves = [];\n  this.callbacks = {\n    postRender: function() {}\n  };\n  this._boardElement = boardElement;\n  this._defaultScoring = \"territory\";\n  this._defaultKoRule = \"simple\";\n  this._defaultRenderer = \"svg\";\n  this._deadPoints = [];\n};\n\nGame.prototype = {\n  _configureOptions: function({ boardSize = this._defaultBoardSize, komi = 0, handicapStones = 0, freeHandicapPlacement = false, scoring = this._defaultScoring, koRule = this._defaultKoRule, renderer = this._defaultRenderer } = {}) {\n    if (typeof boardSize !== \"number\") {\n      throw new Error(\"Board size must be a number, but was: \" + (typeof boardSize));\n    }\n\n    if (typeof handicapStones !== \"number\") {\n      throw new Error(\"Handicap stones must be a number, but was: \" + (typeof boardSize));\n    }\n\n    if (handicapStones > 0 && boardSize !== 9 && boardSize !== 13 && boardSize !== 19) {\n      throw new Error(\"Handicap stones not supported on sizes other than 9x9, 13x13 and 19x19\");\n    }\n\n    if (handicapStones < 0 || handicapStones === 1 || handicapStones > 9) {\n      throw new Error(\"Only 2 to 9 handicap stones are supported\");\n    }\n\n    if (boardSize > 19) {\n      throw new Error(\"cannot generate a board size greater than 19\");\n    }\n\n    this.boardSize = boardSize;\n    this.handicapStones = handicapStones;\n    this._freeHandicapPlacement = freeHandicapPlacement;\n\n    this._scorer = new Scorer({\n      scoreBy: scoring,\n      komi: komi\n    });\n\n    this._rendererChoice = {\n      \"dom\": DOMRenderer,\n      \"svg\": SVGRenderer\n    }[renderer];\n\n    if (!this._rendererChoice) {\n      throw new Error(\"Unknown renderer: \" + renderer);\n    }\n\n    this._whiteMustPassLast = this._scorer.usingPassStones();\n\n    this._ruleset = new Ruleset({\n      koRule: koRule\n    });\n\n    if (this._freeHandicapPlacement) {\n      this._initialState = BoardState._initialFor(boardSize, 0);\n    } else {\n      this._initialState = BoardState._initialFor(boardSize, handicapStones);\n    }\n  },\n\n  _stillPlayingHandicapStones: function() {\n    return this._freeHandicapPlacement && this.handicapStones > 0 && this._moves.length < this.handicapStones;\n  },\n\n  setup: function(options = {}) {\n    for (let key in options) {\n      if (options.hasOwnProperty(key) && VALID_GAME_OPTIONS.indexOf(key) < 0) {\n        throw new Error(\"Unrecognized game option: \" + key);\n      }\n    }\n\n    this._configureOptions(options);\n\n    if (this._boardElement) {\n      const defaultRendererHooks = {\n        handleClick: (y, x) => {\n          if (this.isOver()) {\n            this.toggleDeadAt(y, x);\n          } else {\n            this.playAt(y, x);\n          }\n        },\n\n        hoverValue: (y, x) => {\n          if (!this.isOver() && !this.isIllegalAt(y, x)) {\n            return this.currentPlayer();\n          }\n        },\n\n        gameIsOver: () => {\n          return this.isOver();\n        }\n      };\n\n      this.renderer = new this._rendererChoice(this._boardElement, {\n        hooks: options[\"_hooks\"] || defaultRendererHooks,\n        options: {\n          fuzzyStonePlacement: options[\"fuzzyStonePlacement\"]\n        }\n      });\n    } else {\n      this.renderer = new NullRenderer();\n    }\n\n    this.render();\n  },\n\n  intersectionAt: function(y, x) {\n    return this.currentState().intersectionAt(y, x);\n  },\n\n  intersections: function() {\n    return this.currentState().intersections;\n  },\n\n  deadStones: function() {\n    return this._deadPoints;\n  },\n\n  coordinatesFor: function(y, x) {\n    return this.currentState().xCoordinateFor(x) + this.currentState().yCoordinateFor(y);\n  },\n\n  currentPlayer: function() {\n    if (this._stillPlayingHandicapStones()) {\n      return \"black\";\n    }\n\n    const lastMoveColor = this.currentState().color;\n\n    if (lastMoveColor === \"black\") {\n      return \"white\";\n    } else {\n      return \"black\";\n    }\n  },\n\n  isWhitePlaying: function() {\n    return this.currentPlayer() === \"white\";\n  },\n\n  isBlackPlaying: function() {\n    return this.currentPlayer() === \"black\";\n  },\n\n  score: function() {\n    return this._scorer.score(this);\n  },\n\n  currentState: function() {\n    return this._moves[this._moves.length - 1] || this._initialState;\n  },\n\n  moveNumber: function() {\n    return this.currentState().moveNumber;\n  },\n\n  playAt: function(y, x) {\n    if (this.isIllegalAt(y, x)) {\n      return false;\n    }\n\n    const newState = this.currentState().playAt(y, x, this.currentPlayer());\n    this._moves.push(newState);\n\n    this.render();\n\n    return true;\n  },\n\n  pass: function() {\n    if (this.isOver()) {\n      return false;\n    }\n\n    const newState = this.currentState().playPass(this.currentPlayer());\n    this._moves.push(newState);\n\n    this.render();\n\n    return true;\n  },\n\n  isOver: function() {\n    if (this._moves.length < 2) {\n      return false;\n    }\n\n    if (this._whiteMustPassLast) {\n      const finalMove = this._moves[this._moves.length - 1];\n      const previousMove = this._moves[this._moves.length - 2];\n\n      return finalMove.pass && previousMove.pass && finalMove.color === \"white\";\n    } else {\n      const finalMove = this._moves[this._moves.length - 1];\n      const previousMove = this._moves[this._moves.length - 2];\n\n      return finalMove.pass && previousMove.pass;\n    }\n  },\n\n  toggleDeadAt: function(y, x) {\n    if (this.intersectionAt(y, x).isEmpty()) {\n      return;\n    }\n\n    const alreadyDead = this._isDeadAt(y, x);\n\n    this.currentState().groupAt(y, x).forEach(intersection => {\n      if (alreadyDead) {\n        this._deadPoints = this._deadPoints.filter(dead => !(dead.y === intersection.y && dead.x === intersection.x));\n      } else {\n        this._deadPoints.push({ y: intersection.y, x: intersection.x });\n      }\n    });\n\n    this.render();\n\n    return true;\n  },\n\n  _isDeadAt: function(y, x) {\n    return this._deadPoints.some(dead => dead.y === y && dead.x === x);\n  },\n\n  isIllegalAt: function(y, x) {\n    return this._ruleset.isIllegal(y, x, this);\n  },\n\n  territory: function() {\n    if (!this.isOver()) {\n      return {\n        black: [],\n        white: []\n      };\n    }\n\n    return this._scorer.territory(this);\n  },\n\n  undo: function() {\n    this._moves.pop();\n    this.render();\n  },\n\n  render: function() {\n    if (!this.isOver()) {\n      this._deadPoints = [];\n    }\n\n    this.renderer.render(this.currentState(), {\n      territory: this.territory(),\n      deadStones: this.deadStones()\n    });\n\n    this.callbacks.postRender(this);\n  }\n};\n\nexport default Game;\n"]}